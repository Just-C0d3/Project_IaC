trigger:
  branches:
    include:
    - main
pool:
  vmImage: 'ubuntu-latest'
steps:
- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
  displayName: 'Terraform Init'
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendAzureRmResourceGroupName: 'yourRG'
    backendAzureRmStorageAccountName: 'yourbckendstorage'
    backendAzureRmContainerName: 'blob'
    backendAzureRmKey: 'tf.state'
    backendServiceArm: 'YourSC'
    workingDirectory: '$(System.DefaultWorkingDirectory)/WbDeployment'
    backendType: azurerm
- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
  displayName: 'Terraform Validate'
  inputs:
    command: 'validate'
    workingDirectory: '$(Build.SourcesDirectory)/WbDeployment'

- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
  displayName: 'Terraform Plan'
  inputs:
    command: 'plan'
    workingDirectory: '$(Build.SourcesDirectory)/WbDeployment'
    environmentServiceName: 'YourSC'
    environmentServiceNameAzureRM: 'YourSC'
    inputs:
    input: 'false'

- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
  displayName: 'Terraform Apply'
  inputs:
    command: 'apply'
    workingDirectory: '$(Build.SourcesDirectory)/WbDeployment'
    environmentServiceName: 'YourSC'
    environmentServiceNameAzureRM: 'YourSC'
